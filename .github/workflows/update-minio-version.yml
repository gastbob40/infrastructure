name: Update MinIO Version

on:
  schedule:
    # Ex√©cute tous les jours √† 2h du matin UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Permet l'ex√©cution manuelle

jobs:
  check-and-update-minio:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Setup jq for JSON parsing
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Get current MinIO version from chart
      id: current-version
      run: |
        CURRENT_TAG=$(grep -A 2 'image:' k8s/cluster/apps/minio-community.yml | grep 'tag:' | sed 's/.*tag: *"\(.*\)"/\1/')
        echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
        echo "Current MinIO version: $CURRENT_TAG"

    - name: Get latest MinIO release
      id: latest-version
      run: |
        LATEST_TAG=$(curl -s https://api.github.com/repos/minio/minio/releases/latest | jq -r '.tag_name')
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        echo "Latest MinIO version: $LATEST_TAG"

    - name: Verify Docker image exists on Quay.io
      id: verify-image
      run: |
        LATEST_TAG="${{ steps.latest-version.outputs.latest_tag }}"
        echo "Checking if image quay.io/minio/minio:$LATEST_TAG exists..."

        # Get all available tags from Quay.io
        AVAILABLE_TAGS=$(curl -s "https://quay.io/api/v1/repository/minio/minio/tag/?page=1&limit=100&onlyActiveTags=true" | grep -o 'RELEASE\.[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}-[0-9]\{2\}-[0-9]\{2\}Z' | sort -u)

        if echo "$AVAILABLE_TAGS" | grep -q "^$LATEST_TAG$"; then
          echo "‚úÖ Docker image exists on Quay.io"
          echo "image_exists=true" >> $GITHUB_OUTPUT
          echo "verified_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        else
          echo "‚ùå Docker image not found on Quay.io, falling back to latest available"
          # Get the most recent available tag
          FALLBACK_TAG=$(echo "$AVAILABLE_TAGS" | tail -1)
          echo "Using fallback version: $FALLBACK_TAG"
          echo "image_exists=false" >> $GITHUB_OUTPUT
          echo "verified_tag=$FALLBACK_TAG" >> $GITHUB_OUTPUT
        fi

    - name: Compare versions and update if needed
      id: version-check
      run: |
        CURRENT="${{ steps.current-version.outputs.current_tag }}"
        VERIFIED="${{ steps.verify-image.outputs.verified_tag }}"
        GITHUB_LATEST="${{ steps.latest-version.outputs.latest_tag }}"
        IMAGE_EXISTS="${{ steps.verify-image.outputs.image_exists }}"

        echo "Comparing: $CURRENT vs $VERIFIED"

        if [ "$IMAGE_EXISTS" == "false" ]; then
          echo "‚ö†Ô∏è Warning: GitHub release $GITHUB_LATEST exists but Docker image not yet available"
        fi

        if [ "$CURRENT" != "$VERIFIED" ]; then
          echo "New version available: $VERIFIED"
          echo "needs_update=true" >> $GITHUB_OUTPUT
          echo "version_change=$CURRENT ‚Üí $VERIFIED" >> $GITHUB_OUTPUT
        else
          echo "Already up to date"
          echo "needs_update=false" >> $GITHUB_OUTPUT
        fi

    - name: Update MinIO version in chart
      if: steps.version-check.outputs.needs_update == 'true'
      run: |
        VERIFIED_TAG="${{ steps.verify-image.outputs.verified_tag }}"

        # Mise √† jour de la version dans le fichier YAML
        sed -i "s|tag: \".*\"|tag: \"$VERIFIED_TAG\"|g" k8s/cluster/apps/minio-community.yml

        # V√©rification que le changement a √©t√© appliqu√©
        echo "Updated file content:"
        grep -A 2 'image:' k8s/cluster/apps/minio-community.yml | grep 'tag:'

    - name: Verify changes
      if: steps.version-check.outputs.needs_update == 'true'
      run: |
        echo "Changes made:"
        git diff k8s/cluster/apps/minio-community.yml


    - name: Create Pull Request
      if: steps.version-check.outputs.needs_update == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "k8s: cluster: minio: bump to ${{ steps.verify-image.outputs.verified_tag }}"
        title: "k8s: cluster: minio: bump to ${{ steps.verify-image.outputs.verified_tag }}"
        body: |
          ## üöÄ Automatic MinIO Version Update

          **Previous version:** `${{ steps.current-version.outputs.current_tag }}`
          **New version:** `${{ steps.verify-image.outputs.verified_tag }}`
          ${{ steps.verify-image.outputs.image_exists == 'false' && '‚ö†Ô∏è **Note:** GitHub release `' || '' }}${{ steps.verify-image.outputs.image_exists == 'false' && steps.latest-version.outputs.latest_tag || '' }}${{ steps.verify-image.outputs.image_exists == 'false' && '` exists but Docker image not yet published. Using latest available Docker image.' || '' }}

          ### üìã Changes
          - Updated MinIO image tag in `k8s/cluster/apps/minio-community.yml`
          - This update was automatically detected and applied
          - Docker image availability verified on Quay.io

          ### üîç Release Notes
          Check the [MinIO releases page](https://github.com/minio/minio/releases/tag/${{ steps.verify-image.outputs.verified_tag }}) for details.

          ### ‚úÖ Next Steps
          1. Review this PR for any breaking changes
          2. Test in a development environment if needed
          3. Merge to deploy the update via ArgoCD

          ---
          ü§ñ *This PR was created automatically by GitHub Actions*
        branch: auto-update/minio-${{ steps.verify-image.outputs.verified_tag }}
        delete-branch: true
        draft: false
        labels: |
          automated
          minio
          update

    - name: Summary
      run: |
        if [ "${{ steps.version-check.outputs.needs_update }}" == "true" ]; then
          echo "‚úÖ Created PR for MinIO update: ${{ steps.version-check.outputs.version_change }}"
        else
          echo "‚ÑπÔ∏è No update needed - MinIO is already up to date"
        fi