apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redpanda
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://charts.redpanda.com
    targetRevision: 25.1.1
    chart: redpanda
    helm:
      values: |
        statefulset:
          replicas: 1
        podTemplate:
          spec:
            nodeSelector:
              node-role.kubernetes.io/master: "true"
        listeners:
          kafka:
            tls:
              enabled: false
        console:
          enabled: true

  destination:
    namespace: redpanda
    name: in-cluster
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated:
      prune: true

---


apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: redpanda-console-ingress
  namespace: redpanda
  annotations:
    cert-manager.io/cluster-issuer: default-issuer
    cert-manager.io/revision-history-limit: "1"
    nginx.ingress.kubernetes.io/auth-url: "http://oauth2-proxy.oauth2-proxy.svc.cluster.local:4180/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth-proxy.gastbob40.com/oauth2/start?rd=$scheme://$http_host$request_uri"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-Auth-Request-User, X-Auth-Request-Email"

spec:
  ingressClassName: public
  rules:
    - host: "kafka-console.gastbob40.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: "redpanda-console"
                port:
                  number: 8080
  tls:
    - hosts:
        - "kafka-console.gastbob40.com"
      secretName: "redpanda-console-tls"
